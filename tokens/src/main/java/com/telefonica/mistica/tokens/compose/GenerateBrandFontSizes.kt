package com.telefonica.mistica.tokens.compose

import com.squareup.kotlinpoet.ClassName
import com.squareup.kotlinpoet.FileSpec
import com.squareup.kotlinpoet.PropertySpec
import com.squareup.kotlinpoet.TypeSpec
import com.telefonica.mistica.tokens.TokensGenerator
import com.telefonica.mistica.tokens.dto.TokensDTO
import com.telefonica.mistica.tokens.xml.GenerateXMLFiles.Companion.capitalizeString
import java.io.File

/**
 * Generates the XXXBrandFontSizesAutogenerated.kt file for each brand.
 */
class GenerateBrandFontSizes {
    private val textUnitClass = ClassName("androidx.compose.ui.unit", "TextUnit")

    operator fun invoke(tokens: TokensDTO, brandName: String) {
        val properties = tokens.text.size.map { (key, size) ->
            val value = "${size.value.mobile}.sp"

            PropertySpec.builder("${key}FontSize", textUnitClass)
                .initializer(value)
                .build()
        }

        val textObject = TypeSpec.objectBuilder("${brandName.capitalizeString()}BrandFontSizes")
            .addProperties(properties)
            .build()

        val file = FileSpec.builder("com.telefonica.mistica.compose.theme.brand", "${brandName.capitalizeString()}BrandFontSizesAutogenerated")
            .addFileComment(TokensGenerator.AUTOGENERATED_COMMENT)
            .addType(textObject)
            .addImport("androidx.compose.ui.unit", "sp")
            .build()

        file.writeTo(File(GenerateComposeFiles.LIBRARY_CODE_PATH))
    }
}
