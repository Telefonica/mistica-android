// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        min_sdk_version = 24
        target_sdk_version = 36
        compose_ui_version = "1.7.6"
        kotlin_version = "2.0.21"
        androidx_appcompat_version = "1.7.0"
        androidx_activity_compose_version = "1.6.0"
        androidx_core_version = "1.13.1"
        accompanist_version = "0.32.0"
        coil_version = '2.5.0'
        constraintComposeVersion = '1.0.1'
        detekt_version = '1.23.7'
        roborazzi_version = "1.30.1"
        material_version = "1.12.0"
    }
    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:8.9.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'org.jetbrains.kotlin.plugin.compose' version "$kotlin_version" apply false
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0' apply false
    id "io.github.takahirom.roborazzi" version '1.26.0' apply false
    id "io.gitlab.arturbosch.detekt" version '1.23.7'
}

dependencies {
    apply plugin: "io.gitlab.arturbosch.detekt"
}

allprojects {

    group = 'com.telefonica.mistica'
    if (System.getProperty("SNAPSHOT_VERSION") != null) {
        version = System.getProperty("SNAPSHOT_VERSION")+"-SNAPSHOT"
    } else {
        version = System.getProperty("LIBRARY_VERSION") ?: "undefined"
    }

    tasks.withType(io.gitlab.arturbosch.detekt.Detekt).all {
        exclude("build/")
        exclude("**/build/**")
        exclude("**/resources/**")
        exclude("**/tmp/**")
        exclude("**/*Autogenerated.kt")
    }

    tasks.withType(io.gitlab.arturbosch.detekt.Detekt).configureEach {
        reports {
            html {
                outputLocation.set(file("$buildDir/reports/detekt/detekt-report.html"))
                required.set(true)
            }
            xml {
                outputLocation.set(file("$buildDir/reports/detekt/detekt-checkstyle.xml"))
                required.set(true)
            }
        }
    }

    task detektProjectBaseline(type: io.gitlab.arturbosch.detekt.DetektCreateBaselineTask) {
        description = "Overrides current baseline."
        ignoreFailures.set(true)
        parallel.set(true)
        buildUponDefaultConfig.set(true)
        setSource(files("$projectDir"))
        config.setFrom(files("$projectDir/build-tools/detekt/detekt.yml"))
        include("**/*.kt")
        include("**/*.kts")
    }

    repositories {
        google()
        mavenCentral()
    }
}

apply from: "${rootProject.projectDir}/publish_maven_central.gradle"
apply from: "build-tools/detekt.gradle"

tasks.withType(io.gitlab.arturbosch.detekt.Detekt) {
    autoCorrect = true
}
