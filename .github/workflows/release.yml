name: "Release library to MavenCentral"
on:
  workflow_dispatch:
    inputs:
      libraryVersion:
        description: "Library version"
        required: true
      changelog:
        description: "Changelog (you can format it later)"
        required: true
jobs:
  release:
    runs-on: [self-hosted-org, linux]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Check permissions
        id: check
        uses: scherermichael-oss/action-has-permission@master
        with:
          required-permission: admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check permissions
        if: "! steps.check.outputs.has-permission"
        run: exit 1

      - name: Build library
        if: steps.check.outputs.has-permission
        uses: docker://docker.tuenti.io/android/mistica_builder:3
        with:
          args: 'bash ./gradlew clean :library:assembleRelease :catalog:assembleRelease'

      - name: Build Compose library
        if: steps.check.outputs.has-permission
        uses: docker://docker.tuenti.io/android/mistica_builder:3
        with:
          args: 'bash ./gradlew clean :library-compose:assembleRelease :catalog-compose:assembleRelease'

      - name: Release library
        if: steps.check.outputs.has-permission
        uses: docker://docker.tuenti.io/android/mistica_builder:3
        env:
          MOBILE_MAVENCENTRAL_USER: ${{ secrets.MOBILE_MAVENCENTRAL_USER }}
          MOBILE_MAVENCENTRAL_PASSWORD: ${{ secrets.MOBILE_MAVENCENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID }}
        with:
          args: 'bash ./gradlew :library:publishReleasePublicationToSonatypeRepository -DLIBRARY_VERSION=${{ github.event.inputs.libraryVersion }}'

      - name: Release Compose library
        if: steps.check.outputs.has-permission
        uses: docker://docker.tuenti.io/android/mistica_builder:3
        env:
          MOBILE_MAVENCENTRAL_USER: ${{ secrets.MOBILE_MAVENCENTRAL_USER }}
          MOBILE_MAVENCENTRAL_PASSWORD: ${{ secrets.MOBILE_MAVENCENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID }}
        with:
          args: 'bash ./gradlew :library-compose:publishReleasePublicationToSonatypeRepository -DLIBRARY_VERSION=${{ github.event.inputs.libraryVersion }}'

      - name: Release catalog
        if: steps.check.outputs.has-permission
        uses: docker://docker.tuenti.io/android/mistica_builder:3
        env:
          MOBILE_MAVENCENTRAL_USER: ${{ secrets.MOBILE_MAVENCENTRAL_USER }}
          MOBILE_MAVENCENTRAL_PASSWORD: ${{ secrets.MOBILE_MAVENCENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID }}
        with:
          args: 'bash ./gradlew :catalog:publishCatalogPublicationToSonatypeRepository -DLIBRARY_VERSION=${{ github.event.inputs.libraryVersion }}'

      - name: Release Compose catalog
        if: steps.check.outputs.has-permission
        uses: docker://docker.tuenti.io/android/mistica_builder:3
        env:
          MOBILE_MAVENCENTRAL_USER: ${{ secrets.MOBILE_MAVENCENTRAL_USER }}
          MOBILE_MAVENCENTRAL_PASSWORD: ${{ secrets.MOBILE_MAVENCENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID }}
        with:
          args: 'bash ./gradlew :catalog-compose:publishCatalogPublicationToSonatypeRepository -DLIBRARY_VERSION=${{ github.event.inputs.libraryVersion }}'

      - name: Create Release in github
        if: steps.check.outputs.has-permission
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.libraryVersion }}
          release_name: ${{ github.event.inputs.libraryVersion }}
          body: ${{ github.event.inputs.releaseDescription }}
          draft: true
          prerelease: false